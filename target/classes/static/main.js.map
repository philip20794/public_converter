{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/convert/convert.component.css","webpack:///./src/app/convert/convert.component.html","webpack:///./src/app/convert/convert.component.ts","webpack:///./src/app/download/download.component.css","webpack:///./src/app/download/download.component.html","webpack:///./src/app/download/download.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/services/error.service.ts","webpack:///./src/app/services/request.service.ts","webpack:///./src/app/upload/upload.component.css","webpack:///./src/app/upload/upload.component.html","webpack:///./src/app/upload/upload.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"img{\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n  height: 80px;\\r\\n}\\r\\n\\r\\nmat-grid-tile.top{\\r\\n  background-color: #f2f2f2;\\r\\n}\\r\\n\\r\\nmat-card.error{\\r\\n  background-color: #991f00;\\r\\n  color: #f2f2f2;\\r\\n  min-width: 50%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\ndiv.logo{\\r\\n  background-color: #e8e4e1;\\r\\n  height: 100px;\\r\\n  -webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), 230px calc(100% - 30px), 200px 100%, 0 100%);\\r\\n  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), 230px calc(100% - 30px), 200px 100%, 0 100%);\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ndiv.logout{\\r\\n  position: absolute;\\r\\n  right: 10%;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\nmat-vertical-stepper {\\r\\n  border-radius: 100%;\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\nmat-step {\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\nmat-card-subtitle {\\r\\n  background-color: #006EC7;\\r\\n  max-width: 360px;\\r\\n}\\r\\n\\r\\nmat-card.inner {\\r\\n  align-items: center;\\r\\n  border-radius: 100%;\\r\\n  background: transparent;\\r\\n  margin-top: 20px;\\r\\n  margin-left: 70px;\\r\\n}\\r\\n\\r\\nmat-card.out {\\r\\n  align-items: center;\\r\\n  border-radius: 100%;\\r\\n  min-width: 480px;\\r\\n  min-height: 480px;\\r\\n  background: transparent;;\\r\\n}\\r\\n\\r\\nmat-step-header .mat-step-label {\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\nmat-step-header .mat-step-icon-not-touched span,\\r\\nmat-step-header .mat-step-icon span,\\r\\nmat-step-header .mat-step-icon-not-touched .mat-icon,\\r\\nmat-step-header .mat-step-icon .mat-icon {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\nmat-step-header:nth-of-type(1) .mat-step-icon-not-touched:after,\\r\\nmat-step-header:nth-of-type(1) .mat-step-icon:after {\\r\\n  content: 'New 1';\\r\\n}\\r\\n\\r\\n.active-step-1 mat-step-header:nth-of-type(1) .mat-step-icon-not-touched::after,\\r\\n.active-step-1 mat-step-header:nth-of-type(1) .mat-step-icon::after {\\r\\n  content: 'add_circle' !important; /* name of the material icon */\\r\\n  font-family: 'Material Icons' !important;\\r\\n  -webkit-font-feature-settings: 'liga' 1;\\r\\n          font-feature-settings: 'liga' 1;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"logo\\\">\\n  <img [src]=\\\"logo_ag\\\">\\n</div>\\n<mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\n  <mat-grid-tile *ngIf=\\\"error\\\">\\n    <mat-card class=\\\"error\\\">\\n      <mat-card-title>\\n        {{errorMessage}}\\n      </mat-card-title>\\n    </mat-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile [rowspan]=\\\"6\\\">\\n    <mat-card class=\\\"out\\\" [ngStyle]=\\\"{'background-image': 'url(' + logo + ')'}\\\">\\n      <mat-card class=\\\"inner mat-elevation-z0\\\">\\n        <form novalidate >\\n          <mat-card-title>Converter</mat-card-title>\\n          <mat-card-subtitle>{{message}}</mat-card-subtitle>\\n          <mat-card-content>\\n            <mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\n              <ng-template matStepperIcon=\\\"edit\\\">\\n                <mat-icon>check</mat-icon>\\n              </ng-template>\\n              <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n                <form [formGroup]=\\\"firstFormGroup\\\">\\n                  <ng-template matStepLabel>Upload</ng-template>\\n                  <app-upload (changeFileNameEvent)=\\\"changeFileName($event, stepper)\\\" (changeFileUploadedEvent)=\\\"changeFileUploaded($event, stepper)\\\"\\n                              (changeFileConvertedEvent)=\\\"changeFileConverted($event)\\\" (errorEvent)=\\\"showError($event)\\\"></app-upload>\\n                </form>\\n              </mat-step>\\n              <ng-template matStepperIcon=\\\"edit\\\">\\n                <mat-icon>check</mat-icon>\\n              </ng-template>\\n              <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n                <form [formGroup]=\\\"secondFormGroup\\\">\\n                  <ng-template matStepLabel>Convert</ng-template>\\n                  <app-convert (changeFileConvertedEvent)=\\\"changeFileConverted($event)\\\" [fileName]=\\\"fileName\\\"\\n                               (errorEvent)=\\\"showError($event)\\\"></app-convert>\\n                </form>\\n              </mat-step>\\n              <ng-template matStepperIcon=\\\"edit\\\">\\n                <mat-icon>check</mat-icon>\\n              </ng-template>\\n              <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\n                <form [formGroup]=\\\"thirdFormGroup\\\">\\n                  <ng-template matStepLabel>Download</ng-template>\\n                  <app-download [fileName]=\\\"fileName\\\"></app-download>\\n                </form>\\n              </mat-step>\\n            </mat-vertical-stepper>\\n          </mat-card-content>\\n        </form>\\n      </mat-card>\\n    </mat-card>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n\"","import {AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatStepper } from '@angular/material';\nimport {UploadComponent} from \"./upload/upload.component\";\nimport {ConvertComponent} from \"./convert/convert.component\";\nimport {st} from \"@angular/core/src/render3\";\nimport {VALID} from \"@angular/forms/src/model\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild(UploadComponent) uploader;\n  @ViewChild(ConvertComponent) converter;\n\n  fileName: String;\n  fileUploaded: boolean;\n  fileConverted: boolean;\n  error: boolean;\n  errorMessage: string;\n\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  logo:String;\n  logo_ag:String;\n  message: String;\n\n  @ViewChild('stepper') stepper: MatStepper;\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.logo = 'assets/images/Adesso_logo.png';\n    this.logo_ag = 'assets/images/adesso_full_logo.png';\n    this.fileUploaded = false;\n    this.error = false;\n    this.fileName = \"\";\n    this.message = \"\";\n    this.fileConverted = false;\n    this.resetFirstFormGroup();\n    this.resetSecondFormGroup();\n    this.thirdFormGroup = this._formBuilder.group({\n      thirdCtrl: ''\n    });\n  }\n\n  showError(errorMessage){\n    this.errorMessage = errorMessage;\n    this.error = true;\n  }\n\n  resetFirstFormGroup(){\n    this.error = false;\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.firstFormGroup.statusChanges.subscribe(\n      status => {\n        if (status === 'VALID') {\n          this.stepper.next();\n        }\n      }\n    );\n  }\n  resetSecondFormGroup(){\n    this.error = false;\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup.statusChanges.subscribe(\n      status => {\n        if (status === 'VALID') {\n          this.stepper.next();\n        }\n      }\n    );\n  }\n\n\n  changeFileName($event ,stepper:MatStepper) {\n    this.stepper.reset();\n    this.fileName = $event;\n  }\n\n  isPDF(): boolean{\n    return this.fileName.endsWith('.pdf');\n  }\n\n  changeFileUploaded($event ,stepper:MatStepper) {\n    this.fileUploaded = $event;\n    if (this.fileUploaded){\n      if (this.isPDF()){\n        this.message = \"Uploaded: \"+this.fileName;\n        this.firstFormGroup.removeControl('firstCtrl');\n      } else {\n        this.message = \"Select a .pdf file\";\n      }\n    } else {\n      this.message = \"\";\n      this.resetFirstFormGroup();\n    }\n  }\n\n  changeFileConverted($event) {\n    this.fileConverted = $event;\n    if (this.fileConverted){\n      this.message = \"Converted: \"+this.fileName;\n      this.secondFormGroup.removeControl('secondCtrl');\n    } else {\n      this.message = \"\";\n      this.resetSecondFormGroup();\n    }\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { MatStepperModule} from '@angular/material/stepper';\n\nimport { AppComponent } from './app.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { ConvertComponent } from './convert/convert.component';\nimport { DownloadComponent } from './download/download.component';\nimport { LogoutComponent } from './logout/logout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadComponent,\n    ConvertComponent,\n    DownloadComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatStepperModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatGridListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    Ng4LoadingSpinnerModule.forRoot()\n  ],\n  exports: [MatStepperModule, MatFormFieldModule, MatGridListModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<button mat-stroked-button color=\\\"accent\\\" (click)=\\\"convertFile()\\\">Convert</button>\\n<ng4-loading-spinner [timeout]=\\\"90000\\\" [loadingText]=\\\"'Converting ' + fileName + '...'\\\" [zIndex]=\\\"9999\\\"></ng4-loading-spinner>\\n\"","import {Component, EventEmitter, Injectable, Input, OnInit, Output} from '@angular/core';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport {HttpClient} from \"@angular/common/http\";\nimport {RequestService} from \"../services/request.service\";\nimport {catchError} from \"rxjs/operators\";\nimport {ErrorService} from \"../services/error.service\";\n\n@Component({\n  selector: 'app-convert',\n  templateUrl: './convert.component.html',\n  styleUrls: ['./convert.component.css']\n})\n\n@Injectable()\nexport class ConvertComponent implements OnInit {\n\n  @Input() public fileConverted: boolean;\n  @Output() changeFileConvertedEvent = new EventEmitter<boolean>();\n  @Output() errorEvent = new EventEmitter<String>();\n  @Input() fileName: string;\n\n  constructor(private http: HttpClient, private requestService: RequestService,\n              private spinnerService: Ng4LoadingSpinnerService,\n              private error:ErrorService) { }\n\n  ngOnInit() {\n    this.fileConverted = false;\n    this.changeFileConvertedEvent.emit(this.fileConverted);\n  }\n\n  convertFile() {\n    this.fileConverted = false;\n    this.changeFileConvertedEvent.emit(this.fileConverted);\n    this.spinnerService.show();\n    this.requestService.convert(this.http, this.fileName)\n      .pipe(catchError(err => {\n        this.errorEvent.emit(err.error);\n        this.spinnerService.hide();\n        return this.error.handleError(err);\n      }))\n      .subscribe(response => {\n        if (response.status === 200) {\n          console.log(\"Converted\");\n          this.fileConverted = true;\n          this.changeFileConvertedEvent.emit(this.fileConverted);\n        }\n        this.spinnerService.hide();\n      });\n  }\n\n\n}\n\n","module.exports = \"\"","module.exports = \"<button mat-stroked-button color=\\\"accent\\\" class=\\\"btn btn-primary\\\" (click)=\\\"downloadFile()\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i> Download</button>\\n\"","import {Component, Injectable, Input, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {UploadComponent} from \"../upload/upload.component\";\nimport { saveAs } from 'file-saver';\nimport {throwError} from \"rxjs\";\nimport {AppComponent} from \"../app.component\";\nimport {RequestService} from \"../services/request.service\";\n\n@Component({\n  selector: 'app-download',\n  templateUrl: './download.component.html',\n  styleUrls: ['./download.component.css']\n})\n\n@Injectable()\nexport class DownloadComponent implements OnInit {\n\n  @Input() fileName: String;\n\n  constructor(private http: HttpClient, private requestService: RequestService) { }\n\n  ngOnInit() {\n  }\n\n  downloadFile() {\n    const mediaType = 'application/msword';\n    const fileToDownload = this.fileName.replace(\".pdf\", \".doc\");\n    this.requestService.download(this.http, this.fileName, fileToDownload)\n      .subscribe(\n        (response) => {\n          const blob = new Blob([response], { type: mediaType });\n          saveAs(blob, fileToDownload);\n        },\n        e => { throwError(e); }\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"logout()\\\">\\n  Sign out\\n</button>\\n\"","import {Component, Injectable, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\n\n@Injectable()\nexport class LogoutComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.clear();\n  }\n\n  private clear() {\n    return this.http.post('/clear',null)\n      .subscribe(\n        () => {\n          console.log(\"Cleared!\");\n        }, (err) => {\n          console.log(\"Clearing Error:\", err);\n        }\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable, throwError} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n\n  public handleError(error: HttpErrorResponse): Observable<never> {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  constructor() { }\n\n\n  uploadFile(http: HttpClient, file: File){\n    let formData = new FormData();\n    formData.append('file', file, file.name);\n    return http.post('/', formData, {observe: 'response', responseType: 'text'});\n  }\n\n\n  convert(http: HttpClient, fileName: string) {\n    return http.post('/convert/'+fileName, null, {observe: 'response', responseType: 'text'});\n  }\n\n  download(http: HttpClient, fileName: String, result) {\n    return http.post('/download/'+fileName, {location: result}, {responseType: 'blob'});\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<input type=\\\"file\\\" (change)=\\\"onFileChange($event)\\\" id=\\\"selectedFile\\\" accept=\\\".pdf\\\" style=\\\"display: none;\\\" />\\n<button mat-stroked-button color=\\\"accent\\\" onclick=\\\"document.getElementById('selectedFile').click();\\\">Browse...</button>\\n\\n\\n\\n\\n\"","import {Component, EventEmitter, Injectable, Input, OnInit, Output} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {RequestService} from \"../services/request.service\";\nimport {catchError} from \"rxjs/operators\";\nimport {ErrorService} from \"../services/error.service\";\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\n\n@Injectable()\nexport class UploadComponent implements OnInit {\n  @Input() public fileUploaded: boolean;\n  @Input() public fileName: String;\n  @Output() changeFileNameEvent = new EventEmitter<String>();\n  @Output() changeFileUploadedEvent = new EventEmitter<boolean>();\n  @Output() changeFileConvertedEvent = new EventEmitter<boolean>();\n  @Output() errorEvent = new EventEmitter<String>();\n  public uploadTitle: String;\n\n  constructor(private http: HttpClient, private requestService: RequestService,\n              private error:ErrorService) {\n  }\n\n  ngOnInit() {\n    this.uploadTitle = \"Upload\";\n    this.fileUploaded = false;\n    this.changeFileUploadedEvent.emit(this.fileUploaded);\n    this.changeFileConvertedEvent.emit(false);\n    this.fileName = \"\";\n    this.changeFileNameEvent.emit(this.fileName);\n  }\n\n  onFileChange(event) {\n    this.fileUploaded = false;\n    this.changeFileUploadedEvent.emit(this.fileUploaded);\n    this.changeFileConvertedEvent.emit(false);\n    this.uploadFile(event.target.files);\n  }\n\n\n  uploadFile(files: FileList) {\n    if (files.length == 0) {\n      console.log(\"No file selected!\");\n      return\n    }\n    let file: File = files[0];\n    this.fileName = file.name;\n    this.changeFileNameEvent.emit(this.fileName);\n\n    this.requestService.uploadFile(this.http, file)\n      .pipe(catchError(err => {\n        this.errorEvent.emit(err.error);\n        return this.error.handleError(err);\n      }))\n      .subscribe(response => {\n        if (response.status === 200) {\n          console.log(\"Upload done\");\n          this.fileUploaded = true;\n          this.changeFileUploadedEvent.emit(this.fileUploaded);\n          this.fileName = file.name;\n          this.changeFileNameEvent.emit(this.fileName);\n        }\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}